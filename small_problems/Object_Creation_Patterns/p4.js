// OLOO: Objects Linking to Other Objects
// Create an object with shared behaviors 
//   -Use Object.create to inherit behaviors
//   - Run the init method to set up instance properties
// Function anonymize: 
//   Input: none
//   Output: 16 character sequence of letters/numbers
//   Data structure: array
// Account Object:
// PROPERTIES:
// init: sets email, password, firstName, lastName and displayName
// displayName is generated by the anonymize function
// reanonymize: generates a new 16 char sequence and 
//   -reassigns to displayName prop
//   -Calls the anonymize function to do this
//   -INPUT: password
//   -If the password matches, returns true and sets new displayName
//   -Else, return 'Invalid Password'
// resetPassword: method asks the user for new pass and reassigns the pass prop
//   the user must provide current pass
//   -Returns true/'Invalid Password'
// firstName: method returns first name if pass valid, else Invalid Password
// lastName: method returns last name if pass valid, else "Invalid Password"
// email: method retuns email if pass valid else "invalid pass'
// displayName: method returns the displayName (16 char sequence)bb

let Account = {

  init(email, password, firstNameInput, lastNameInput) {
    function validPass(pass) {
      return pass === password;
    }
    function generateDisplayName() {
      let sequence = '';
      const POSSIBLE_CHARS = [
        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',
        'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',
        'u', 'v', 'w', 'x', 'y', 'z', '1', '2', '3', '4',
        '5', '6', '7', '8', '9', '0'
      ];
      const STRING_LENGTH = 16;
      for (let idx = 0; idx < STRING_LENGTH; idx += 1) {
        let randIdx = Math.floor(Math.random() * POSSIBLE_CHARS.length);
        sequence += POSSIBLE_CHARS[randIdx];
      }
      return sequence;
    }
    this.displayName = generateDisplayName();
    this.reanonymize = function reanonymize(pass) {
      if (validPass(pass)) {
        this.displayName = generateDisplayName();
        return true;
      }
      return 'Invalid Pass';
    };

    this.firstName = function firstName(pass) {
      if (validPass(pass)) {
        return firstNameInput;
      } else {
        return 'Invalid Password';
      }
    };

    this.lastName = function lastName(pass) {
      if (validPass(pass)) {
        return lastNameInput;
      }
      return 'Invalid Pass';
    };

    this.resetPassword = function resetPassword(currentPass, newPass) {
      if (validPass(currentPass)) {
        password = newPass;
        return true;
      }
      return 'Invalid Password';
    };

    return this;
  }
};

// let user1 = Object.create(Account).init('mikmik@mikmik.io', '12345', 'mikmik', 'theGreat');
// console.log(user1);
// console.log(user1.firstName('12345'));
// console.log(user1.firstName('21313'));
// console.log(user1.firstNameInput);
// console.log(user1.displayName);
// console.log(user1.reanonymize());
// console.log(user1.reanonymize('12345'));
// console.log(user1.displayName);
// console.log(user1.resetPassword());
// console.log(user1.resetPassword('12345', '23456'));
let fooBar = Object.create(Account).init('foo@bar.com', '123456', 'foo', 'bar');
console.log(fooBar.firstName);                     // returns the firstName function
//console.log(fooBar.email);                         // returns the email function
console.log(fooBar.firstName('123456'));           // logs 'foo'
console.log(fooBar.firstName('abc'));              // logs 'Invalid Password'
console.log(fooBar.displayName);                   // logs 16 character sequence
console.log(fooBar.resetPassword('123', 'abc'))    // logs 'Invalid Password'
console.log(fooBar.resetPassword('123456', 'abc')) // logs true

let displayName = fooBar.displayName;
fooBar.reanonymize('abc');                         // returns true
console.log(displayName === fooBar.displayName);   // logs false

let bazQux = Object.create(Account).init('baz@qux.com', '123456', 'baz', 'qux');
console.log(fooBar.firstName('abc'));              // logs 'Invalid Password'
//console.log(fooBar.email('abc'));                  // logs 'Invalid Password'
